{"version":3,"sources":["services/Transport/EApiRoutes.ts","screens/home/HomeStore.ts","screens/home/Home.tsx","screens/not-found/NotFound.tsx","components/menu/MenuStore.ts","services/Transport/Transport.ts","components/user-store/index.ts","components/input-field/ERegExp.ts","components/menu/Menu.tsx","components/header/HeaderStore.ts","components/header/Header.tsx","components/table/TableStore.ts","components/table/Table.tsx","screens/user-result/UserResultStore.ts","screens/user-result/UserResult.tsx","components/input-field/InputFieldStore.ts","components/input-field/InputField.tsx","screens/calculator/EGender.ts","screens/login/img/LoginStore.ts","screens/login/Login.tsx","screens/profile/ProfileStore.ts","screens/profile/Profile.tsx","components/radio-button/RadioStore.ts","components/radio-button/Radio.tsx","screens/calculator/CalculatorController.ts","screens/calculator/CalculatorStore.ts","screens/calculator/Calculator.tsx","screens/registration/RegistrationStore.ts","screens/registration/Registration.tsx","screens/test/Test.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["EApiRoutes","HomeStore","Object","classCallCheck","this","cards","title","link","className","Home","autobind","_class","_React$Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","store","inherits","createClass","key","value","react","map","item","index","React","NotFound","href","MenuStore","MenuStore_class","initializerDefineProperty","_descriptor","window","location","replace","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","Transport","client","axios","create","baseURL","BASE_URL","config","require","get","options","_getUserInfo","asyncToGenerator","regenerator_default","a","mark","_callee","id","wrap","_context","prev","next","abrupt","GET_USER_INFO","stop","_x","_login","_callee2","params","_context2","post","LOGIN","_x2","_getTrials","_callee3","_context3","GET_TRIALS","_x3","_getCategories","_callee4","_context4","GET_CATEGORIES","_getCalculationResult","_callee5","_context5","GET_CALCULATED_RESULT","_x4","_getRoles","_callee6","_context6","headers","token","localStorage","getItem","GET_ROLES","_inviteUser","_callee7","_context7","INVITE","_x5","_getEmail","_callee8","_context8","invite_token","console","log","GET_MAIL","ERegExp","UserStore","user_store_temp","_class2","transport","roles","_instance","Error","isEmpty","set","setItem","user_store_class","Menu","Menu_class","observer","getInstance","isLogin","classNames","menu","-show","props","isVisible","getItems","items","HeaderStore","HeaderStore_class","HeaderStore_descriptor","Header","Header_class","react_default","createElement","Menu_Menu","isMenuVisible","onClick","onMenuClick","onLogoClick","Component","TableStore","TableStore_class","TableStore_descriptor","_descriptor2","Table","Table_class","isUndefined","columns","data","isEqual","getColumns","getLines","column","_this2","line","accessor","getCell","cell","UserResultStore","UserResultStore_class2","UserResultStore_descriptor","UserResultStore_descriptor2","_descriptor3","UserResultStore_class","UserResult","UserResult_class","pathname","split","getUserInfo","then","onSuccess","catch","onError","response","result","date","date_of_competition","objectSpread","error","Table_Table","InputFieldStore","InputFieldStore_class2","InputFieldStore_descriptor","InputFieldStore_class","EGender","InputField","InputField_class","defaultValue","attempt","setValue","input__field","read-only","isReadOnly","onChange","type","maxLength","onBlur","name","accessKey","placeholder","readOnly","event","target","mask","RegExp","test","checkDouble","ONLY_DOUBLE","indexOf","LoginStore","LoginStore_class2","LoginStore_descriptor","LoginStore_descriptor2","email","password","LoginStore_class","Login","Login_class","InputField_InputField","setEmail","setPassword","onSubmit","login","ProfileStore","ProfileStore_class","ProfileStore_descriptor","ProfileStore_descriptor2","ProfileStore_descriptor3","Profile","Profile_class","getAllRoles","r","getRoles","react_select_esm","isSearchable","role_id","label","name_of_role","classNamePrefix","inviteUser","selectedRoleId","selectedOption","RadioStore","RadioStore_class","RadioStore_descriptor","Radio","Radio_class","values","isChecked","onClickItem","radio-form__button","checked","selectedIndex","CalculatorController","CalculatorController_class","res","old","isNil","splice","genderId","gender","MALE","getTrials","gender_id","onSuccessGetTrials","getCategories","onSuccessGetCategories","trial_id","trialId","primaryResult","isNaN","getCalculationResult","primary_result","age_category_id","ageCategoryId","onSuccessCalculate","CalculatorStore","CalculatorStore_class2","CalculatorStore_descriptor","CalculatorStore_descriptor2","CalculatorStore_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","forEach","trial","push","is_main_trial","name_of_trial","result_for_bronze","result_for_gold","result_for_silver","categories","err","CalculatorStore_class","Calculator","Calculator_class","controller","onComponentDidMount","setCell","nameCell","setNameCell","setColumns","getOptions","Radio_Radio","FEMALE","onRadioChange","ONLY_NUMBERS","setOld","src","_this3","onClickVisible","onBlurInput","RegistrationStore","RegistrationStore_class","RegistrationStore_descriptor","Registration","Registration_class","parsedUrl","search","history","replaceState","getEmail","onSuccessGetEmail","Test","App","Header_Header","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6KAAYA,2GCKCC,SAAb,SAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAG,KACIC,MAAQ,CACJ,CAACC,MAAO,+DAAcC,KAAM,GAAIC,UAAW,eAC3C,CAACF,MAAO,iFAAiBC,KAAM,GAAIC,UAAW,aAC9C,CAACF,MAAO,mDAAYC,KAAM,GAAIC,UAAW,QACzC,CAACF,MAAO,uCAAUC,KAAM,GAAIC,UAAW,YCElCC,EADZC,YACDC,EAAA,SAAAC,GAAA,SAAAH,IAAA,IAAAI,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAK,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAAO,IAAAc,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIzB,EADjCa,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAO,EAAAG,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAO,EAAA,EAAAoB,IAAA,SAAAC,MAAA,WAIQ,OACIC,EAAA,qBAAKvB,UAAW,QACZuB,EAAA,qBAAKvB,UAAW,SAERJ,KAAKsB,MAAMrB,MAAM2B,IAAI,SAACC,EAAMC,GAAP,OACjBH,EAAA,qBAAKF,IAAKK,EAAO1B,UAAS,QAAAiB,OAAUQ,EAAKzB,YACrCuB,EAAA,qBAAKvB,UAAW,iBACZuB,EAAA,qBAAKvB,UAAS,aAAAiB,OAAeQ,EAAKzB,aAClCuB,EAAA,qBAAKvB,UAAW,eAAgByB,EAAK3B,iBAZzEG,EAAA,CAA0B0B,eAA1BxB,ECVayB,EAAb,SAAAxB,GAAA,SAAAwB,IAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,GAAAlC,OAAAmB,EAAA,EAAAnB,CAAAE,KAAAF,OAAAoB,EAAA,EAAApB,CAAAkC,GAAAZ,MAAApB,KAAAY,YAAA,OAAAd,OAAAyB,EAAA,EAAAzB,CAAAkC,EAAAxB,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAkC,EAAA,EAAAP,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAA,yBACIA,EAAA,yCACAA,EAAA,mBAAGM,KAAM,KAAT,wBALhBD,EAAA,CAA8BD,kDCCjBG,GAAbC,EAAA,oBAAAD,IAAApC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,GAAApC,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAAqC,EAAArC,MAAA,OAAAF,OAAA0B,EAAA,EAAA1B,CAAAoC,EAAA,OAAAT,IAAA,kBAAAC,MAAA,WAWQY,OAAOC,SAASC,QAAQ,mBAXhCN,EAAA,GAAAG,EAAAvC,OAAA2C,EAAA,EAAA3C,CAAAqC,EAAAO,UAAA,SACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACqC,CAC7B,CAAC7C,MAAO,kFAAkBC,KAAM,KAChC,CAACD,MAAO,+DAAcC,KAAM,KAC5B,CAACD,MAAO,+DAAcC,KAAM,KAC5B,CAACD,MAAO,qBAAOC,KAAM,KACrB,CAACD,MAAO,qEAAeC,KAAM,eAC7B,CAACD,MAAO,yDAAaC,KAAM,SAPnCgC,8EJHYvC,gVKQL,UAAMoD,EAAb,WAKI,SAAAA,IAAelD,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,GAAAhD,KAHPiD,OAASC,IAAMC,OAAO,CAACC,QAASJ,EAAUK,WAGpCrD,KAFdsD,OAASC,EAAQ,IAGbP,EAAUK,SAAWG,cAAIxD,KAAKsD,OAAQ,YACtC,IAAMG,EAAU,CAACL,QAASJ,EAAUK,UACpCrD,KAAKiD,OAASC,IAAMC,OAAOM,GARnC,OAAA3D,OAAA0B,EAAA,EAAA1B,CAAAkD,EAAA,EAAAvB,IAAA,cAAAC,MAAA,eAAAgC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAAC,EAWsBC,GAXtB,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAYerE,KAAKiD,OAAOO,IAAI,GAAAnC,OAAGzB,EAAW0E,eAAgB9B,QAAQ,SAAUwB,KAZ/E,wBAAAE,EAAAK,SAAAR,EAAA/D,SAAA,gBAAAwE,GAAA,OAAAd,EAAAtC,MAAApB,KAAAY,YAAA,KAAAa,IAAA,QAAAC,MAAA,eAAA+C,EAAA3E,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAAY,EAegBC,GAfhB,OAAAf,EAAAC,EAAAI,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,cAAAQ,EAAAP,OAAA,SAgBerE,KAAKiD,OAAO4B,KAAKjF,EAAWkF,MAAOH,IAhBlD,wBAAAC,EAAAL,SAAAG,EAAA1E,SAAA,gBAAA+E,GAAA,OAAAN,EAAArD,MAAApB,KAAAY,YAAA,KAAAa,IAAA,YAAAC,MAAA,eAAAsD,EAAAlF,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAAmB,EAmBoBN,GAnBpB,OAAAf,EAAAC,EAAAI,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAb,OAAA,SAoBerE,KAAKiD,OAAO4B,KAAKjF,EAAWuF,WAAYR,IApBvD,wBAAAO,EAAAX,SAAAU,EAAAjF,SAAA,gBAAAoF,GAAA,OAAAJ,EAAA5D,MAAApB,KAAAY,YAAA,KAAAa,IAAA,gBAAAC,MAAA,eAAA2D,EAAAvF,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAAwB,IAAA,OAAA1B,EAAAC,EAAAI,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAlB,OAAA,SAwBerE,KAAKiD,OAAOO,IAAI5D,EAAW4F,iBAxB1C,wBAAAD,EAAAhB,SAAAe,EAAAtF,SAAA,yBAAAqF,EAAAjE,MAAApB,KAAAY,YAAA,KAAAa,IAAA,uBAAAC,MAAA,eAAA+D,EAAA3F,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAA4B,EA2B+Bf,GA3B/B,OAAAf,EAAAC,EAAAI,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAtB,OAAA,SA4BerE,KAAKiD,OAAO4B,KAAKjF,EAAWgG,sBAAuBjB,IA5BlE,wBAAAgB,EAAApB,SAAAmB,EAAA1F,SAAA,gBAAA6F,GAAA,OAAAJ,EAAArE,MAAApB,KAAAY,YAAA,KAAAa,IAAA,WAAAC,MAAA,eAAAoE,EAAAhG,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAAiC,IAAA,IAAAtC,EAAAR,EAAA,OAAAW,EAAAC,EAAAI,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAgCcX,EAAU,CAACL,QAASJ,EAAUK,SAAU4C,QAAS,CAACC,MAAOC,aAAaC,QAAQ,WAC9EnD,EAASC,IAAMC,OAAOM,GAjCpCuC,EAAA3B,OAAA,SAkCepB,EAAOO,IAAI5D,EAAWyG,YAlCrC,wBAAAL,EAAAzB,SAAAwB,MAAA,yBAAAD,EAAA1E,MAAApB,KAAAY,YAAA,KAAAa,IAAA,aAAAC,MAAA,eAAA4E,EAAAxG,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAAyC,EAqCqB5B,GArCrB,IAAAlB,EAAAR,EAAA,OAAAW,EAAAC,EAAAI,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAsCcX,EAAU,CAACL,QAASJ,EAAUK,SAAU4C,QAAS,CAACC,MAAOC,aAAaC,QAAQ,WAC9EnD,EAASC,IAAMC,OAAOM,GAvCpC+C,EAAAnC,OAAA,SAwCepB,EAAO4B,KAAKjF,EAAW6G,OAAQ9B,IAxC9C,wBAAA6B,EAAAjC,SAAAgC,MAAA,gBAAAG,GAAA,OAAAJ,EAAAlF,MAAApB,KAAAY,YAAA,KAAAa,IAAA,WAAAC,MAAA,eAAAiF,EAAA7G,OAAA6D,EAAA,EAAA7D,CAAA8D,EAAAC,EAAAC,KAAA,SAAA8C,IAAA,IAAAnD,EAAAR,EAAA,OAAAW,EAAAC,EAAAI,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cA4CcX,EAAU,CAACL,QAASJ,EAAUK,SAAU4C,QAAS,CAACa,aAAcX,aAAaC,QAAQ,WAC3FW,QAAQC,IAAIb,aAAaC,QAAQ,UAC3BnD,EAASC,IAAMC,OAAOM,GA9CpCoD,EAAAxC,OAAA,SA+CepB,EAAOO,IAAI5D,EAAWqH,WA/CrC,wBAAAJ,EAAAtC,SAAAqC,MAAA,yBAAAD,EAAAvF,MAAApB,KAAAY,YAAA,MAAAoC,EAAA,GAAaA,EACMK,gBCFZ,sCCPK6D,MDOCC,GADZ7G,aACD8G,EAAAC,EAAA,WAKI,SAAAF,IACI,GADWrH,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,GAAAnH,KAHEsH,UAAY,IAAItE,EAGnBhD,KAFNuH,MAAiB,GAGjBJ,EAAUK,UACV,MAAM,IAAIC,MAAM,iFAP5B,OAAA3H,OAAA0B,EAAA,EAAA1B,CAAAqH,EAAA,EAAA1F,IAAA,UAAAC,MAAA,WAqBQ,OAAQgG,kBAAQvB,aAAaC,QAAQ,YArB7C,CAAA3E,IAAA,QAAAkG,IAAA,SAgBcjG,GACNyE,aAAayB,QAAQ,QAASlG,MAjBtC,EAAAD,IAAA,cAAAC,MAAA,WAaQ,OADAyF,EAAUK,UAAYL,EAAUK,WAAa,IAAIL,EAC1CA,EAAUK,cAbzBL,EAAA,GAAAE,EACmBG,eADnB,EAAAK,EAAAT,KAAAS,+BEIaC,GAFZxH,YAEDyH,EADCC,aACDD,EAAA,SAAAvH,GAAA,SAAAsH,IAAA,IAAArH,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAA8H,GAAA,QAAAnH,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAAgI,IAAA3G,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIY,EADjCxB,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAgI,EAAAtH,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAgI,EAAA,EAAArG,IAAA,oBAAAC,MAAA,WAIayF,GAAUc,cAAcC,YAJrC,CAAAzG,IAAA,SAAAC,MAAA,WAUQ,OACIC,EAAA,qBAAKvB,UAAW+H,KAAW,CAACC,MAAQ,EAAMC,QAASrI,KAAKsI,MAAMC,aAC1D5G,EAAA,qBAAKvB,UAAW,eACXJ,KAAKwI,eAb1B,CAAA/G,IAAA,WAAAC,MAAA,WAoBQ,OACI1B,KAAKsB,MAAMmH,MAAM7G,IAAI,SAACC,EAAMC,GAAP,OACjBH,EAAA,mBAAGvB,UAAW,YAAaqB,IAAKK,EAAOG,KAAMJ,EAAK1B,MAC9C0B,EAAK3B,aAvBzB4H,EAAA,CAA0B/F,eAA1BgG,MCTaW,IAAbC,EAAA,SAAAD,IAAA5I,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,GAAA5I,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,gBAAA4I,EAAA5I,OAAA4I,EAAA9I,OAAA2C,EAAA,EAAA3C,CAAA6I,EAAAjG,UAAA,iBACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBACgC,KADhC4F,GCOaE,GAFZb,aAEDc,EADCxI,YACDwI,EAAA,SAAAtI,GAAA,SAAAqI,IAAA,IAAApI,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAA6I,GAAA,QAAAlI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAA+I,IAAA1H,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIoH,GADjChI,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAA+I,EAAArI,GAAAV,OAAA0B,EAAA,EAAA1B,CAAA+I,EAAA,EAAApH,IAAA,SAAAC,MAAA,WAIQ,OACIqH,EAAAlF,EAAAmF,cAAA,WACID,EAAAlF,EAAAmF,cAACC,GAAD,CAAMV,UAAWvI,KAAKsB,MAAM4H,gBAC5BH,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,UACZ2I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,qBACZ2I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAU,oBAAoB+I,QAASnJ,KAAKoJ,cACjDL,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAU,eAAe+I,QAASnJ,KAAKqJ,aACxCN,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAU,sBACf2I,EAAAlF,EAAAmF,cAAA,QAAM5I,UAAU,qBAAhB,8DAEJ2I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAU,8BAdvC,CAAAqB,IAAA,cAAAC,MAAA,WAsBQ1B,KAAKsB,MAAM4H,eAAiBlJ,KAAKsB,MAAM4H,gBAtB/C,CAAAzH,IAAA,cAAAC,MAAA,WA0BQY,OAAOC,SAASC,QAAQ,SA1BhCqG,EAAA,CAA4B9G,IAAMuH,aAAlCR,uBCNaS,IAAbC,EAAA,SAAAD,IAAAzJ,OAAAC,EAAA,EAAAD,CAAAE,KAAAuJ,GAAAzJ,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,UAAAyJ,EAAAzJ,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,OAAA0J,EAAA1J,OAAAyJ,EAAA3J,OAAA2C,EAAA,EAAA3C,CAAA0J,EAAA9G,UAAA,WACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAC0C,MAD1C2G,EAAA5J,OAAA2C,EAAA,EAAA3C,CAAA0J,EAAA9G,UAAA,QAEKC,KAFL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAEiC,MAFjCyG,GCQaG,UAFZrJ,YAEDsJ,EADC5B,aACD4B,EAAA,SAAApJ,GAAA,SAAAmJ,IAAA,IAAAlJ,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAA2J,GAAA,QAAAhJ,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAA6J,IAAAxI,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIiI,GADjC7I,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAA6J,EAAAnJ,GAAAV,OAAA0B,EAAA,EAAA1B,CAAA6J,EAAA,EAAAlI,IAAA,oBAAAC,MAAA,WAIYmI,sBAAY7J,KAAKsI,MAAMwB,UAAYD,sBAAY7J,KAAKsI,MAAMyB,QAG9D/J,KAAKsB,MAAMwI,QAAU9J,KAAKsI,MAAMwB,QAChC9J,KAAKsB,MAAMyI,KAAO/J,KAAKsI,MAAMyB,QARrC,CAAAtI,IAAA,qBAAAC,MAAA,WAYYmI,sBAAY7J,KAAKsI,MAAMwB,UAAYD,sBAAY7J,KAAKsI,MAAMyB,QAGzDC,kBAAQhK,KAAKsB,MAAMwI,QAAS9J,KAAKsI,MAAMwB,WACxC9J,KAAKsB,MAAMwI,QAAU9J,KAAKsI,MAAMwB,SAE/BE,kBAAQhK,KAAKsB,MAAMyI,KAAM/J,KAAKsI,MAAMyB,QACrC/J,KAAKsB,MAAMyI,KAAO/J,KAAKsI,MAAMyB,SAnBzC,CAAAtI,IAAA,SAAAC,MAAA,WAwBQ,OACIC,EAAA,qBAAKvB,UAAW,SACZuB,EAAA,qBAAKvB,UAAW,iBACXJ,KAAKiK,cAEVtI,EAAA,qBAAKvB,UAAW,cACXJ,KAAKkK,eA9B1B,CAAAzI,IAAA,aAAAC,MAAA,WAqCQ,OACI1B,KAAKsB,MAAMwI,QAAQlI,IAAI,SAACuI,EAAQrI,GAC5B,OACIH,EAAA,qBAAKF,IAAKK,EAAO1B,UAAS,cAAAiB,OAAgB8I,EAAO/J,YAC5C+J,EAAOjK,WAzChC,CAAAuB,IAAA,WAAAC,MAAA,WAgDwC,IAAA0I,EAAApK,KAChC,OACIA,KAAKsB,MAAMyI,KAAKnI,IAAI,SAACyI,EAAMvI,GACvB,OAAI+H,sBAAYrG,cAAI6G,EAAM,WAClB7G,cAAI6G,EAAM,aAEN1I,EAAA,qBAAKF,IAAKK,EAAO1B,UAAW,eAEpBgK,EAAK9I,MAAMwI,QAAQlI,IAAI,SAACuI,EAAQrI,GAExB,OACIH,EAAA,qBAAKF,IAAKK,EAAO1B,UAAS,cAAAiB,OAAgB8I,EAAO/J,WAAa,KACzDoD,cAAIA,cAAI6G,EAAM,QAASF,EAAOG,UAC9BX,EAAMY,QAAQF,EAAMF,EAAOK,eASxD,EAGD7I,EAAA,qBAAKvB,UAAW,qBAAsBoD,cAAI6G,EAAM,gBAzEvE,EAAA5I,IAAA,UAAAC,MAAA,SA8E2BqI,EAAcS,GACjC,GAAKA,EAGL,OAAOA,EAAKT,OAlFpBJ,EAAA,CAA2B5H,eAA3B6H,OCLaa,gBADZnK,aACDoK,EAAA,SAAAD,IAAA3K,OAAAC,EAAA,EAAAD,CAAAE,KAAAyK,GAAA3K,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,OAAA2K,EAAA3K,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,OAAA4K,EAAA5K,WAII8J,QAA0B,CACtB,CAACQ,SAAU,sBAAuBpK,MAAO,4BACzC,CAACoK,SAAU,gBAAiBpK,MAAO,4EACnC,CAACoK,SAAU,iBAAkBpK,MAAO,iHACpC,CAACoK,SAAU,mBAAoBpK,MAAO,6HACtC,CAACoK,SAAU,gBAAiBpK,MAAO,+FACnC,CAACoK,SAAU,OAAQpK,MAAO,wCAC1B,CAACoK,SAAU,UAAWpK,MAAO,8CAC7B,CAACoK,SAAU,SAAUpK,MAAO,yCAZpCJ,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAA6K,EAAA7K,OAAA2K,EAAA7K,OAAA2C,EAAA,EAAA3C,CAAA4K,EAAAhI,UAAA,QACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACqC,MADrC6H,EAAA9K,OAAA2C,EAAA,EAAA3C,CAAA4K,EAAAhI,UAAA,QAEKC,KAFL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,OAAA8H,EAAA/K,OAAA2C,EAAA,EAAA3C,CAAA4K,EAAAhI,UAAA,SAcKC,KAdL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAcgC,MAdhC+H,EAAAJ,KAAAI,GCOaC,UAFZzK,YAED0K,EADChD,aACDgD,EAAA,SAAAxK,GAII,SAAAuK,EAAYzC,GAAW,IAAA5H,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAA+K,IACnBrK,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,KAAAF,OAAAoB,EAAA,EAAApB,CAAAiL,GAAA5J,KAAAnB,KAAMsI,KAJOhB,eAGM,EAAA5G,EAFNY,MAAQ,IAAImJ,GAIzB/J,EAAK4G,UAAY,IAAItE,EAFFtC,EAJ3B,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAiL,EAAAvK,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAiL,EAAA,EAAAtJ,IAAA,oBAAAC,MAAA,WAUQ,IAAMsC,EAAK1B,OAAOC,SAAS0I,SAASC,MAAM,KAAK,GAC/ClL,KAAKsH,UAAU6D,YAAYnH,GAAIoH,KAAKpL,KAAKqL,WAAWC,MAAMtL,KAAKuL,WAXvE,CAAA9J,IAAA,YAAAC,MAAA,SAcsB8J,GACd,IAAMzB,EAAOvG,cAAIgI,EAAU,QACrBC,EAASjI,cAAIuG,EAAM,WACzB/J,KAAKsB,MAAMyI,KAAO0B,EAAO7J,IAAI,SAACC,GAC1B,IAAM6J,EAAO7J,EAAK8J,oBAAoBT,MAAM,KAAK,GACjD,MAAO,CACHnB,KAAKjK,OAAA8L,GAAA,EAAA9L,CAAA,GACE+B,EADH,CAEA8J,oBAAqBD,IAEzBnD,WAAW,OAxB3B,CAAA9G,IAAA,UAAAC,MAAA,SA6BoBmK,GACPA,EAAML,WAGXxL,KAAKsB,MAAMuK,MAAQA,EAAML,SAASzB,KAAK7J,SAjC/C,CAAAuB,IAAA,SAAAC,MAAA,WAqCQ,OACIC,EAAA,qBAAKvB,UAAW,eAEa,KAArBJ,KAAKsB,MAAMuK,MAEHlK,EAAA,qBAAKvB,UAAW,SACXJ,KAAKsB,MAAMuK,OAGlBlK,EAAA,cAACmK,GAAD,CAAOhC,QAAS9J,KAAKsB,MAAMwI,QAASC,KAAM/J,KAAKsB,MAAMyI,YA9C/EgB,EAAA,CAAgChJ,eAAhCiJ,OCTae,UADZzL,aACD0L,EAAA,SAAAD,IAAAjM,OAAAC,EAAA,EAAAD,CAAAE,KAAA+L,GAAAjM,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAAiM,EAAAjM,OAAAiM,EAAAnM,OAAA2C,EAAA,EAAA3C,CAAAkM,EAAAtJ,UAAA,SACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACwB,MADxBmJ,EAAAF,KAAAE,mBRJYhF,mFSYL,2CCZKiF,MDYCC,GAFZpE,aAEDqE,GADC/L,YACD+L,GAAA,SAAA7L,GAAA,SAAA4L,IAAA,IAAA3L,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAoM,GAAA,QAAAzL,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAAsM,IAAAjL,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIyK,GADjCrL,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAsM,EAAA5L,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAsM,EAAA,EAAA3K,IAAA,oBAAAC,MAAA,WAIYmI,sBAAY7J,KAAKsI,MAAMgE,gBAG3BtM,KAAKsB,MAAMI,MAAQ1B,KAAKsI,MAAMgE,aAC9BC,kBAAQvM,KAAKsI,MAAMkE,SAAWxM,KAAKsB,MAAMI,UARjD,CAAAD,IAAA,SAAAC,MAAA,WAYQ,OACIC,EAAA,uBACIvB,UAAW+H,KAAW,CAACsE,cAAgB,EAAMC,YAAa1M,KAAKsI,MAAMqE,aACrEC,SAAU5M,KAAK4M,SACflL,MAAO1B,KAAKsB,MAAMI,MAClBmL,KAAM7M,KAAKsI,MAAMuE,KACjBC,UAAW9M,KAAKsI,MAAMwE,UACtBC,OAAQ/M,KAAKsI,MAAMyE,OACnBC,KAAMhN,KAAKsI,MAAM0E,KACjBC,UAAWjN,KAAKsI,MAAM2E,UACtBC,YAAalN,KAAKsI,MAAM4E,YACxBC,SAAUnN,KAAKsI,MAAMqE,eAvBrC,CAAAlL,IAAA,WAAAC,MAAA,SA4BqB0L,GACb,IAAM1L,EAAQ0L,EAAMC,OAAO3L,MACtBmI,sBAAY7J,KAAKsI,MAAMgF,OAAU5F,kBAAQhG,IAQ9C1B,KAAKsB,MAAMI,MAAQ0L,EAAMC,OAAO3L,MAChC6K,kBAAQvM,KAAKsI,MAAMkE,SAAWxM,KAAKsB,MAAMI,QARxB,IAAI6L,OAAOvN,KAAKsI,MAAMgF,MAC1BE,KAAK9L,IAAU1B,KAAKyN,YAAY/L,KACrC1B,KAAKsB,MAAMI,MAAQA,EACnB6K,kBAAQvM,KAAKsI,MAAMkE,SAAWxM,KAAKsB,MAAMI,UAlCzD,CAAAD,IAAA,cAAAC,MAAA,SA0CwBA,GAChB,OAAI1B,KAAKsI,MAAMgF,OAASpG,GAAQwG,eAGJ,IAAxBhM,EAAMiM,QAAQ,MAAejM,EAAMc,QAAQ,IAAK,MAAQxC,KAAKsB,MAAMI,OAC5DA,EAAMwJ,MAAM,KAAKrK,QAAU,KA/C9C,CAAAY,IAAA,WAAAC,MAAA,WAqDQ,OAAO1B,KAAKsB,MAAMI,UArD1B0K,EAAA,CAAgCrK,eAAhCsK,QERauB,GADZtN,aACDuN,GAAA,oBAAAD,IAAA9N,OAAAC,EAAA,EAAAD,CAAAE,KAAA4N,GAAA9N,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAA8N,GAAA9N,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,WAAA+N,GAAA/N,MAAA,OAAAF,OAAA0B,EAAA,EAAA1B,CAAA8N,EAAA,EAAAnM,IAAA,WAAAC,MAAA,SAIaA,GACL1B,KAAKgO,MAAQtM,IALrB,CAAAD,IAAA,cAAAC,MAAA,SAQgBA,GACR1B,KAAKiO,SAAWvM,MATxBkM,EAAA,GAAAE,GAAAhO,OAAA2C,EAAA,EAAA3C,CAAA+N,GAAAnL,UAAA,SACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACwB,MADxBgL,GAAAjO,OAAA2C,EAAA,EAAA3C,CAAA+N,GAAAnL,UAAA,YAEKC,KAFL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAE2B,MAF3BmL,GAAAL,MAAAK,GCOaC,GADZ7N,YACD8N,GAAA,SAAA5N,GAAA,SAAA2N,IAAA,IAAA1N,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAmO,GAAA,QAAAxN,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAAqO,IAAAhN,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIsM,GADjClN,EAEqB4G,UAAY,IAAItE,EAFrCtC,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAqO,EAAA3N,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAqO,EAAA,EAAA1M,IAAA,SAAAC,MAAA,WAKQ,OACIqH,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,SACZ2I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,QACZ2I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,iBACZ2I,EAAAlF,EAAAmF,cAAA,MAAI5I,UAAW,UAAf,4BACA2I,EAAAlF,EAAAmF,cAAA,KAAG5I,UAAW,cAAd,qIACA2I,EAAAlF,EAAAmF,cAAA,WACID,EAAAlF,EAAAmF,cAAA,KAAG5I,UAAW,cAAd,SACA2I,EAAAlF,EAAAmF,cAACqF,GAAD,CAAY7B,SAAUxM,KAAKsB,MAAMgN,YAErCvF,EAAAlF,EAAAmF,cAAA,WACID,EAAAlF,EAAAmF,cAAA,KAAG5I,UAAW,cAAd,wCACA2I,EAAAlF,EAAAmF,cAACqF,GAAD,CAAYxB,KAAM,WAAYL,SAAUxM,KAAKsB,MAAMiN,eAEvDxF,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,SAAU+I,QAASnJ,KAAKwO,UAAxC,uCAnBxB,CAAA/M,IAAA,WAAAC,MAAA,WA2BQ,IAAMiD,EAAS,CACX8J,MAAOzO,KAAKsB,MAAM0M,MAClBC,SAAUjO,KAAKsB,MAAM2M,UAEzBjO,KAAKsH,UAAUmH,MAAM9J,GAAQyG,KAAKpL,KAAKqL,WAAWC,MAAMvE,QAAQC,OA/BxE,CAAAvF,IAAA,YAAAC,MAAA,SAkCc8J,GACNzE,QAAQC,IAAI,kBAAmBwE,GAC/BrE,GAAUc,cAAc/B,MAAQsF,EAASzB,KAAK7D,MAC9C5D,OAAOC,SAASC,QAAQ,gBArChC2L,EAAA,CAA2BpM,IAAMuH,aAAjC8E,YCRaM,UAAbC,GAAA,SAAAD,IAAA5O,OAAAC,EAAA,EAAAD,CAAAE,KAAA0O,GAAA5O,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAA4O,GAAA5O,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,iBAAA6O,GAAA7O,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAA8O,GAAA9O,OAAA4O,GAAA9O,OAAA2C,EAAA,EAAA3C,CAAA6O,GAAAjM,UAAA,SACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACiC,MADjC8L,GAAA/O,OAAA2C,EAAA,EAAA3C,CAAA6O,GAAAjM,UAAA,kBAEKC,KAFL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAEkC,KAFlC+L,GAAAhP,OAAA2C,EAAA,EAAA3C,CAAA6O,GAAAjM,UAAA,SAGKC,KAHL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAGwB,MAHxB4L,ICWaI,GAFZzO,YAED0O,GADChH,aACDgH,GAAA,SAAAxO,GAAA,SAAAuO,IAAA,IAAAtO,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAA+O,GAAA,QAAApO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAAiP,IAAA5N,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBwG,UAAY,IAAItE,EADrCtC,EAEqBY,MAAQ,IAAIoN,GAFjChO,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAiP,EAAAvO,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAiP,EAAA,EAAAtN,IAAA,oBAAAC,MAAA,WAKQ1B,KAAKiP,cAAc7D,KAAKpL,KAAKqL,aALrC,CAAA5J,IAAA,YAAAC,MAAA,SAQcwN,GACNlP,KAAKsB,MAAMiG,MAAQ2H,EAAEnF,OAT7B,CAAAtI,IAAA,cAAAC,MAAA,WAaQ,OAAO1B,KAAKsH,UAAU6H,aAb9B,CAAA1N,IAAA,SAAAC,MAAA,WAiBQ,OACIC,EAAA,qBAAKvB,UAAW,WACZuB,EAAA,oCACAA,EAAA,cAAC0M,GAAD,CAAY7B,SAAUxM,KAAKwM,WAC3B7K,EAAA,cAACyN,GAAA,EAAD,CACIC,cAAc,EACd5L,QACIzD,KAAKsB,MAAMiG,MAAM3F,IAAI,SAAAC,GACjB,MAAO,CACHH,MAAOG,EAAKyN,QAASC,MAAO1N,EAAK2N,gBAI7CpP,UAAU,yBACVqP,gBAAgB,eAChBvC,YAAa,4EACbN,SAAU5M,KAAK4M,WAEnBjL,EAAA,wBAAQwH,QAASnJ,KAAKwO,UAAtB,WAnChB,CAAA/M,IAAA,WAAAC,MAAA,WAwCQ1B,KAAKsH,UAAUoI,WAAW,CAACJ,QAAStP,KAAKsB,MAAMqO,eAAgB3B,MAAOhO,KAAKsB,MAAM0M,QAAQ5C,KAAKrE,QAAQC,OAxC9G,CAAAvF,IAAA,WAAAC,MAAA,SA0CakO,GACL5P,KAAKsB,MAAMqO,eAAiBC,EAAelO,QA3CnD,CAAAD,IAAA,WAAAC,MAAA,SA8CaA,GACL1B,KAAKsB,MAAM0M,MAAQtM,MA/C3BqN,EAAA,CAA6BhN,eAA7BiN,QCXaa,IAAbC,GAAA,SAAAD,IAAA/P,OAAAC,EAAA,EAAAD,CAAAE,KAAA6P,GAAA/P,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAA+P,GAAA/P,OAAA+P,GAAAjQ,OAAA2C,EAAA,EAAA3C,CAAAgQ,GAAApN,UAAA,SACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACsC,MADtC+M,ICQaE,WAFZ1P,YAED2P,GADCjI,aACDiI,GAAA,SAAAzP,GAAA,SAAAwP,IAAA,IAAAvP,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAgQ,GAAA,QAAArP,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAAkQ,IAAA7O,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIuO,GADjCnP,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAkQ,EAAAxP,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAkQ,EAAA,EAAAvO,IAAA,oBAAAC,MAAA,WAIQ1B,KAAKsB,MAAMmH,MAAQzI,KAAKsI,MAAM4H,OAAOtO,IAAI,SAAAF,GACrC,MAAO,CAACxB,MAAOwB,EAAOyO,WAAW,KAEjCzI,kBAAQ1H,KAAKsB,MAAMmH,SAGvBzI,KAAKsB,MAAMmH,MAAM,GAAG0H,WAAY,KAVxC,CAAA1O,IAAA,SAAAC,MAAA,WAa8B,IAAA0I,EAAApK,KACtB,OACI+I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,cAERJ,KAAKsB,MAAMmH,MAAM7G,IAAI,SAACC,EAAMC,GAAP,OACbiH,EAAAlF,EAAAmF,cAAA,OAAKvH,IAAKK,EAAO1B,UAAW,mBAAoB+I,QAAS,kBAAMiB,EAAKgG,YAAYtO,KAC5EiH,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW+H,KAAW,CACvBkI,sBAAsB,EACtBC,QAAWzO,EAAKsO,cAEpBpH,EAAAlF,EAAAmF,cAAA,YAAOnH,EAAK3B,aAvB5C,CAAAuB,IAAA,cAAAC,MAAA,SAgCgB6O,GACRvQ,KAAKsB,MAAMmH,MAAM7G,IAAI,SAACC,EAAMC,GAAP,OACjBD,EAAKsO,UAAYI,IAAkBzO,IAElC9B,KAAKsI,MAAMsE,UAGhB5M,KAAKsI,MAAMsE,SAAS5M,KAAKsB,MAAMmH,MAAM8H,GAAerQ,WAvC5D8P,EAAA,CAA2BjO,IAAMuH,aAAjC2G,0BNXY9D,2HOUL,8CAAMqE,GADZlQ,YACDmQ,GAAA,WAII,SAAAD,EAAYlP,GAAyBxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAwQ,GAAAxQ,KAHpBsH,UAAY,IAAItE,EAGGhD,KAFnBsB,WAEmB,EAChCtB,KAAKsB,MAAQA,EALrB,OAAAxB,OAAA0B,EAAA,EAAA1B,CAAA0Q,EAAA,EAAA/O,IAAA,SAAAC,MAAA,WASQ,IAAMgP,GAAO1Q,KAAKsB,MAAMqP,IACxB,IAAIC,gBAAMF,IAA2B,KAAnB1Q,KAAKsB,MAAMqP,IAA7B,CAGA3Q,KAAKsB,MAAMyI,KAAK8G,OAAO,EAAG7Q,KAAKsB,MAAMyI,KAAKlJ,QAC1C,IAAMiQ,EAAW9Q,KAAKsB,MAAMyP,SAAW5E,GAAQ6E,KAAO,EAAI,EAC1DhR,KAAKsH,UAAU2J,UAAU,CAACC,UAAWJ,EAAUH,IAAKD,IAC/CtF,KAAKpL,KAAKsB,MAAM6P,oBAChB7F,MAAMtL,KAAKsB,MAAMiK,YAjB9B,CAAA9J,IAAA,SAAAC,MAAA,SAoBWA,GACH1B,KAAKsB,MAAMqP,IAAMjP,IArBzB,CAAAD,IAAA,gBAAAC,MAAA,SAwBkBA,GACV1B,KAAKsB,MAAMyP,OAASrP,EACpB1B,KAAK+M,WA1Bb,CAAAtL,IAAA,sBAAAC,MAAA,WA8BQ1B,KAAKsH,UAAU8J,gBAAgBhG,KAAKpL,KAAKsB,MAAM+P,wBAAwB/F,MAAMtL,KAAKsB,MAAMiK,WA9BhG,CAAA9J,IAAA,iBAAAC,MAAA,SAiCmBsC,GACXhE,KAAKsB,MAAMyI,KAAO/J,KAAKsB,MAAMyI,KAAKnI,IAAI,SAAAC,GAClC,IAAMkI,EAAOlI,EAAKkI,KAClB,MAAO,CACHA,OACAxB,UAAWwB,EAAKuH,WAAatN,GAAanC,EAAK0G,eAtC/D,CAAA9G,IAAA,cAAAC,MAAA,SA4CgB0L,GACR,IAAMmE,GAAWnE,EAAMC,OAAOJ,UACxBuE,GAAkBpE,EAAMC,OAAO3L,MAAMc,QAAQ,IAAK,KACpDiP,MAAMD,IAAyC,KAAvBpE,EAAMC,OAAO3L,OAAgB+P,MAAMF,IAG/DvR,KAAK0R,qBAAqBH,EAASC,KAlD3C,CAAA/P,IAAA,uBAAAC,MAAA,SAqDiC4P,EAAkBK,GAC3C,IAAMhN,EAAsC,CACxCiN,gBAAiB5R,KAAKsB,MAAMuQ,cAC5BF,iBACAL,WACAJ,UAAWlR,KAAKsB,MAAMyP,SAAW5E,GAAQ6E,KAAO,EAAI,GAExDhR,KAAKsH,UACAoK,qBAAqB/M,GACrByG,KAAKpL,KAAKsB,MAAMwQ,oBAChBxG,MAAMtL,KAAKsB,MAAMiK,aA/D9BiF,EAAA,KAAAC,GCCasB,GADZzR,aACD0R,GAAA,oBAAAD,IAAAjS,OAAAC,EAAA,EAAAD,CAAAE,KAAA+R,GAAAjS,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,OAAAiS,GAAAjS,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,OAAAkS,GAAAlS,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,WAAAmS,GAAAnS,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,UAAAoS,GAAApS,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,SAAAqS,GAAArS,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,MAAAsS,GAAAtS,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,gBAAAuS,GAAAvS,MAAAF,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,aAAAwS,GAAAxS,MAAA,OAAAF,OAAA0B,EAAA,EAAA1B,CAAAiS,EAAA,EAAAtQ,IAAA,qBAAAC,MAAA,SAUuB8J,GAAmD,IAAA9K,EAAAV,KAClE+G,QAAQC,IAAI,qCAAsCwE,GAClD,IAAMzB,EAAOvG,cAAIgI,EAAU,QAC3BxL,KAAK6R,cAAgB9H,EAAK6H,gBACXpO,cAAKuG,EAAM,UACnB0I,QAAQ,SAAA5Q,GACC2B,cAAI3B,EAAM,eAClB4Q,QAAQ,SAACC,GACThS,EAAKqJ,KAAK4I,KAAK,CAAC5I,KAAM2I,EAAOnK,WAAW,QAGhDvI,KAAK+J,KAAK4I,KAAK,CAAC5I,KAAM,CACd6I,eAAe,EACvBC,cAAe,mDACfC,kBAAmB,GACnBC,gBAAiB,EACjBC,kBAAmB,GACnB1B,SAAU,IACH/I,WAAW,MA5B1B,CAAA9G,IAAA,qBAAAC,MAAA,SA+BuBwN,GACfnI,QAAQC,IAAIkI,KAhCpB,CAAAzN,IAAA,yBAAAC,MAAA,SAmC2B8J,GACnBxL,KAAKiT,WAAazH,EAASzB,OApCnC,CAAAtI,IAAA,UAAAC,MAAA,SAuCYwR,GACJnM,QAAQ8E,MAAMqH,GACdlT,KAAK+J,KAAK4I,KAAK,CAAC5I,KAAM,CACd6I,eAAe,EACfC,cAAe,mDACfC,kBAAmB,GACnBC,gBAAiB,EACjBC,kBAAmB,GACnB1B,SAAU,IACX/I,WAAW,QAhD1BwJ,EAAA,GAAAE,GAAAnS,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,QACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACqC,MADrCmP,GAAApS,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,QAEKC,KAFL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,OAAAoP,GAAArS,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,YAGKC,KAHL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,OAAAqP,GAAAtS,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,WAIKC,KAJL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAI0C,MAJ1CsP,GAAAvS,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,UAKKC,KALL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAKyBoJ,GAAQ6E,QALjCsB,GAAAxS,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,OAMKC,KANL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAMsB,MANtBwP,GAAAzS,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,iBAOKC,KAPL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAOiC,KAPjCyP,GAAA1S,OAAA2C,EAAA,EAAA3C,CAAAkS,GAAAtP,UAAA,cAQKC,KARL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAQuD,MARvDoQ,GAAAnB,MAAAmB,YCOaC,WAFZ9S,YAED+S,GADCrL,aACDqL,GAAA,SAAA7S,GAAA,SAAA4S,IAAA,IAAA3S,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAoT,GAAA,QAAAzS,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAAsT,IAAAjS,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBQ,MAAQ,IAAIyQ,GADjCrR,EAEqB4S,WAAa,IAAI9C,GAAqB9P,EAAKY,OAFhEZ,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAAsT,EAAA5S,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAsT,EAAA,EAAA3R,IAAA,oBAAAC,MAAA,WAKQ1B,KAAKsT,WAAWC,sBAChBvT,KAAKsB,MAAMkJ,KAAOxK,KAAKwT,QACvBxT,KAAKsB,MAAMmS,SAAWzT,KAAK0T,YAC3B1T,KAAK2T,eARb,CAAAlS,IAAA,aAAAC,MAAA,WAYQ1B,KAAKsB,MAAMwI,QAAU,CACjB,CAACQ,SAAU,gBAAiBpK,MAAO,2EAAgBE,UAAW,OAAQoK,KAAMxK,KAAKsB,MAAMmS,UACvF,CAACnJ,SAAU,iBAAkBpK,MAAO,gHAAuBsK,KAAMxK,KAAKsB,MAAMkJ,MAC5E,CAACF,SAAU,mBAAoBpK,MAAO,6HACtC,CAACoK,SAAU,kBAAmBpK,MAAO,wCACrC,CAACoK,SAAU,oBAAqBpK,MAAO,8CACvC,CAACoK,SAAU,oBAAqBpK,MAAO,2CAlBnD,CAAAuB,IAAA,SAAAC,MAAA,WAuBQ,IAAM+B,EAAUzD,KAAK4T,aACrB,OACIjS,EAAA,qBAAKvB,UAAW,cACZuB,EAAA,qBAAKvB,UAAW,yBACZuB,EAAA,qBAAKvB,UAAW,UACZuB,EAAA,kDACAA,EAAA,cAACkS,GAAD,CAAO3D,OAAQ,CAAC/D,GAAQ6E,KAAM7E,GAAQ2H,QAASlH,SAAU5M,KAAKsT,WAAWS,iBAE7EpS,EAAA,yEACIA,EAAA,cAAC0M,GAAD,CACIf,KAAMpG,GAAQ8M,aACdlH,UAAW,EACXC,OAAQ/M,KAAKsT,WAAWvG,OACxBP,SAAUxM,KAAKsT,WAAWW,SALlC,8DAUJtS,EAAA,cAACuS,GAAA,aAAD,CAAczQ,QAAWA,EAASyJ,YAAc,6JAChDvL,EAAA,cAACmK,GAAD,CAAOhC,QAAS9J,KAAKsB,MAAMwI,QAASC,KAAM/J,KAAKsB,MAAMyI,UA1CrE,CAAAtI,IAAA,aAAAC,MAAA,WA+C2D,IAAA0I,EAAApK,KAQnD,OANAA,KAAKsB,MAAM2R,WAAWR,QAAQ,SAAA5Q,GACTuI,EAAK9I,MAAMyP,OAAW5E,GAAQ6E,KAC3CnP,EAAKqP,YAHiC,KAhDtD,CAAAzP,IAAA,cAAAC,MAAA,SA0DwBqI,GAA+B,IAAAoK,EAAAnU,KACzCyL,EAASjI,cAAIuG,EAAM,QACzB,OACIpI,EAAA,qBACIvB,UAAW,kBACX+I,QAAS,kBAAMgL,EAAKb,WAAWc,eAAe3I,EAAO6F,YAFzD,0CA7DZ,CAAA7P,IAAA,UAAAC,MAAA,SAsEoBqI,GACZ,IAAM0B,EAASjI,cAAIuG,EAAM,QACzB,OACIpI,EAAA,cAAC0M,GAAD,CACItB,OAAQ/M,KAAKsT,WAAWe,YACxBnH,YAAa,6CACbD,UAAWxB,EAAO6F,SAClBhE,KAAMpG,GAAQwG,YACdZ,UAAW,SA9E3BsG,EAAA,CAAgCrR,eAAhCsR,SChBaiB,IAAbC,GAAA,SAAAD,IAAAxU,OAAAC,EAAA,EAAAD,CAAAE,KAAAsU,GAAAxU,OAAAsC,EAAA,EAAAtC,CAAAE,KAAA,QAAAwU,GAAAxU,OAAAwU,GAAA1U,OAAA2C,EAAA,EAAA3C,CAAAyU,GAAA7R,UAAA,SACKC,KADL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBACgC,MADhCwR,ICQaE,GADZzM,aACD0M,GAAA,SAAAlU,GAAA,SAAAiU,IAAA,IAAAhU,EAAAC,EAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAyU,GAAA,QAAA9T,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAN,EAAAZ,OAAAmB,EAAA,EAAAnB,CAAAE,MAAAS,EAAAX,OAAAoB,EAAA,EAAApB,CAAA2U,IAAAtT,KAAAC,MAAAX,EAAA,CAAAT,MAAAqB,OAAAP,MACqBwG,UAAY,IAAItE,EADrCtC,EAEqBY,MAAQ,IAAIgT,GAFjC5T,EAAA,OAAAZ,OAAAyB,EAAA,EAAAzB,CAAA2U,EAAAjU,GAAAV,OAAA0B,EAAA,EAAA1B,CAAA2U,EAAA,EAAAhT,IAAA,oBAAAC,MAAA,WAKQ,IAAMiT,EAAYrS,OAAOC,SAASqS,OAAO1J,MAAM,KAC3CyJ,EAAU9T,OAAS,IAGvBsG,GAAUc,cAAc/B,MAAQyO,EAAU,GAC1CE,QAAQC,aAAa,GAAI,GAAI,gBAC7B9U,KAAKsH,UAAUyN,WAAW3J,KAAKpL,KAAKgV,sBAX5C,CAAAvT,IAAA,oBAAAC,MAAA,SAc8B8J,GACtBxL,KAAKsB,MAAM0M,MAAQxC,EAASzB,KAAKiE,QAfzC,CAAAvM,IAAA,SAAAC,MAAA,WAmBQ,OACIqH,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,SACZ2I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,QACZ2I,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,iBACZ2I,EAAAlF,EAAAmF,cAAA,MAAI5I,UAAW,UAAf,sEACA2I,EAAAlF,EAAAmF,cAAA,KAAG5I,UAAW,cAAd,yKACA2I,EAAAlF,EAAAmF,cAAA,WACID,EAAAlF,EAAAmF,cAAA,KAAG5I,UAAW,cAAd,SACA2I,EAAAlF,EAAAmF,cAACqF,GAAD,CAAY1B,YAAY,EAAML,aAActM,KAAKsB,MAAM0M,SAE3DjF,EAAAlF,EAAAmF,cAAA,WACID,EAAAlF,EAAAmF,cAAA,KAAG5I,UAAW,cAAd,wCACA2I,EAAAlF,EAAAmF,cAACqF,GAAD,CAAYxB,KAAM,cAEtB9D,EAAAlF,EAAAmF,cAAA,WACID,EAAAlF,EAAAmF,cAAA,KAAG5I,UAAW,cAAd,+FACA2I,EAAAlF,EAAAmF,cAACqF,GAAD,CAAYxB,KAAM,cAEtB9D,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,UAAhB,uHArCxBqU,EAAA,CAAkC1S,IAAMuH,aAAxCoL,GCNaO,WAAb,SAAAzU,GAAA,SAAAyU,IAAA,OAAAnV,OAAAC,EAAA,EAAAD,CAAAE,KAAAiV,GAAAnV,OAAAmB,EAAA,EAAAnB,CAAAE,KAAAF,OAAAoB,EAAA,EAAApB,CAAAmV,GAAA7T,MAAApB,KAAAY,YAAA,OAAAd,OAAAyB,EAAA,EAAAzB,CAAAmV,EAAAzU,GAAAV,OAAA0B,EAAA,EAAA1B,CAAAmV,EAAA,EAAAxT,IAAA,SAAAC,MAAA,WAEQ,OACIqH,EAAAlF,EAAAmF,cAAA,OAAK5I,UAAW,OAAQ+I,QAASnJ,KAAKmJ,SAClCJ,EAAAlF,EAAAmF,cAAA,oBACAD,EAAAlF,EAAAmF,cAAA,oBALhB,CAAAvH,IAAA,UAAAC,MAAA,WAWQqF,QAAQC,IAAI,WAXpBiO,EAAA,CAA0BlT,IAAMuH,YCkCjB4L,oLArBP,OACIvT,EAAA,cAAAA,EAAA,cACIA,EAAA,cAACwT,GAAD,MACAxT,EAAA,cAACyT,EAAA,EAAD,KACIzT,EAAA,cAAC0T,EAAA,EAAD,KACI1T,EAAA,cAAC2T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpV,IACjCsB,EAAA,cAAC2T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWtH,KACtCxM,EAAA,cAAC2T,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW1G,KACxCpN,EAAA,cAAC2T,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAW1K,KACtCpJ,EAAA,cAAC2T,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAWrC,KACrCzR,EAAA,cAAC2T,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWhB,KACtC9S,EAAA,cAAC2T,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWR,KAC/BtT,EAAA,cAAC2T,EAAA,EAAD,CAAOG,UAAWzT,cAdxBD,aCHE2T,QACW,cAA7BpT,OAAOC,SAASoT,UAEe,UAA7BrT,OAAOC,SAASoT,UAEhBrT,OAAOC,SAASoT,SAASC,MACvB,2DCbNC,IAASC,OAAO/M,EAAAlF,EAAAmF,cAAC+M,GAAD,MAASC,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhL,KAAK,SAAAiL,GACjCA,EAAaC","file":"static/js/main.19548b99.chunk.js","sourcesContent":["export enum EApiRoutes {\r\n    GET_USER_INFO = \"/api/participant/{:uid}\",\r\n    LOGIN = \"/api/authorization/login\",\r\n    GET_TRIALS = \"/api/participant/trial\",\r\n    GET_CALCULATED_RESULT = \"/api/calculate\",\r\n    GET_ROLES = \"/api/user/roles\",\r\n    INVITE = \"/api/authorization/invite\",\r\n    GET_MAIL = \"/api/authorization/registration/email\",\r\n    GET_CATEGORIES = \"/api/participant/categories\",\r\n}","export interface ICard {\r\n    title: string;\r\n    link: string;\r\n    className: string;\r\n}\r\nexport class HomeStore {\r\n    cards = [\r\n        {title: \"участникам\", link: \"\", className: \"participant\"},\r\n        {title: \"организаторам\", link: \"\", className: \"organizer\"},\r\n        {title: \"командам\", link: \"\", className: \"team\"},\r\n        {title: \"судьям\", link: \"\", className: \"judge\"}\r\n    ];\r\n}","import * as React from \"react\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {Transport} from \"../../services/Transport\";\r\nimport {AxiosError, AxiosResponse} from \"axios\";\r\nimport {IGetUserInfoResponse} from \"../../services/Transport/responses\";\r\nimport {InputField} from \"../../components/input-field\";\r\nimport \"./Home.scss\";\r\nimport {Table} from \"../../components/table/Table\";\r\nimport {Menu} from \"../../components/menu\";\r\nimport {HomeStore} from \"./HomeStore\";\r\n\r\n@autobind\r\nexport class Home extends React.Component {\r\n    private readonly store = new HomeStore();\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={\"home\"}>\r\n                <div className={\"cards\"}>\r\n                    {\r\n                        this.store.cards.map((item, index) =>\r\n                            <div key={index} className={`card ${item.className}`}>\r\n                                <div className={\"card__content\"}>\r\n                                    <div className={`card__img ${item.className}`}/>\r\n                                    <div className={\"card__title\"}>{item.title}</div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nexport class NotFound extends React.Component {\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div>\r\n                <p>Page not found</p>\r\n                <a href={\"/\"}>Go to Home Page</a>\r\n            </div>\r\n        )\r\n    }\r\n}","import {observable} from \"mobx\";\r\nimport {IMenuItem} from \"./IMenuItem\";\r\n\r\nexport class MenuStore {\r\n    @observable items: IMenuItem[] = [\r\n        {title: \"Личный кабинет\", link: \"#\"},\r\n        {title: \"Результаты\", link: \"#\"},\r\n        {title: \"Информация\", link: \"#\"},\r\n        {title: \"Сми\", link: \"#\"},\r\n        {title: \"Калькулятор\", link: \"/calculator\"},\r\n        {title: \"Партнерам\", link: \"#\"},\r\n    ];\r\n\r\n    private static onCalcItemClick(): void {\r\n        window.location.replace(\"/calculator\")\r\n    }\r\n}","import axios, {AxiosError, AxiosRequestConfig, AxiosResponse} from \"axios\";\r\nimport {get} from \"lodash\";\r\nimport {EApiRoutes} from \"./EApiRoutes\";\r\nimport {IGetCategoriesResponse, IGetEmailResponse, IGetUserInfoResponse, ILoginResponse} from \"./responses\";\r\nimport {IGetCalculationResultParams, ILoginParams, IGetTrialsParams, IInviteParams} from \"./params\";\r\nimport {IGetTrialsResponse} from \"./responses/IGetTrialsResponse\";\r\nimport {IRole} from \"../../components/user-store\";\r\n\r\nexport class Transport {\r\n    private static BASE_URL: string;\r\n    private client = axios.create({baseURL: Transport.BASE_URL});\r\n    config = require(\"./config/config.json\");\r\n\r\n    constructor() {\r\n        Transport.BASE_URL = get(this.config, \"url.base\");\r\n        const options = {baseURL: Transport.BASE_URL};\r\n        this.client = axios.create(options);\r\n    }\r\n\r\n    async getUserInfo(id: string): Promise<AxiosResponse<IGetUserInfoResponse>> {\r\n        return this.client.get(`${EApiRoutes.GET_USER_INFO}`.replace(\"{:uid}\", id));\r\n    }\r\n\r\n    async login(params: ILoginParams): Promise<AxiosResponse<ILoginResponse>> {\r\n        return this.client.post(EApiRoutes.LOGIN, params);\r\n    }\r\n\r\n    async getTrials(params: IGetTrialsParams): Promise<AxiosResponse<IGetTrialsResponse>> {\r\n        return this.client.post(EApiRoutes.GET_TRIALS, params);\r\n    }\r\n\r\n    async getCategories(): Promise<AxiosResponse<IGetCategoriesResponse[]>> {\r\n        return this.client.get(EApiRoutes.GET_CATEGORIES);\r\n    }\r\n\r\n    async getCalculationResult(params: IGetCalculationResultParams): Promise<AxiosResponse<IGetTrialsResponse>> {\r\n        return this.client.post(EApiRoutes.GET_CALCULATED_RESULT, params);\r\n    }\r\n\r\n    async getRoles(): Promise<AxiosResponse<IRole[]>> {\r\n        const options = {baseURL: Transport.BASE_URL, headers: {token: localStorage.getItem(\"token\")}};\r\n        const client = axios.create(options);\r\n        return client.get(EApiRoutes.GET_ROLES);\r\n    }\r\n\r\n    async inviteUser(params: IInviteParams): Promise<AxiosResponse> {\r\n        const options = {baseURL: Transport.BASE_URL, headers: {token: localStorage.getItem(\"token\")}};\r\n        const client = axios.create(options);\r\n        return client.post(EApiRoutes.INVITE, params);\r\n    }\r\n\r\n    async getEmail(): Promise<AxiosResponse<IGetEmailResponse>> {\r\n        const options = {baseURL: Transport.BASE_URL, headers: {invite_token: localStorage.getItem(\"token\")}};\r\n        console.log(localStorage.getItem(\"token\"));\r\n        const client = axios.create(options);\r\n        return client.get(EApiRoutes.GET_MAIL);\r\n    }\r\n}","import {isEmpty} from \"lodash\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {IRole} from \"./IRole\";\r\nimport {Transport} from \"../../services/Transport\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n@autobind\r\nexport class UserStore {\r\n    private static _instance: UserStore;\r\n    private readonly transport = new Transport();\r\n    private roles: IRole[] = [];\r\n\r\n    constructor() {\r\n        if (UserStore._instance){\r\n            throw new Error(\"Error: Instantiation failed: Use SingletonClass.getInstance() instead of new.\");\r\n        }\r\n    }\r\n\r\n    public static getInstance(): UserStore {\r\n        UserStore._instance = UserStore._instance || new UserStore();\r\n        return UserStore._instance;\r\n    }\r\n\r\n    set token(value: string) {\r\n        localStorage.setItem(\"token\", value);\r\n    }\r\n\r\n    isLogin(): boolean {\r\n        return !isEmpty(localStorage.getItem(\"token\"));\r\n    }\r\n}\r\n\r\nexport { IRole } from \"./IRole\";","export enum ERegExp {\r\n    ONLY_NUMBERS = '^[0-9]+$',\r\n    ONLY_DOUBLE = '[+-]?([0-9]*[.])?[0-9]+',\r\n}","import * as React from \"react\";\r\nimport {MenuStore} from \"./MenuStore\";\r\nimport {autobind} from \"core-decorators\";\r\nimport \"./Menu.scss\";\r\nimport {IMenuProps} from \"./IMenuProps\";\r\nimport {UserStore} from \"../user-store\";\r\nimport {observer} from \"mobx-react\";\r\nimport classNames from \"classnames\";\r\n\r\n@autobind\r\n@observer\r\nexport class Menu extends React.Component<IMenuProps> {\r\n    private readonly store = new MenuStore();\r\n\r\n    componentDidMount(): void {\r\n        if (!UserStore.getInstance().isLogin()) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={classNames({\"menu\": true, \"-show\": this.props.isVisible})}>\r\n                <div className={\"menu__items\"}>\r\n                    {this.getItems()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getItems(): React.ReactNode {\r\n        return (\r\n            this.store.items.map((item, index) => (\r\n                <a className={\"menu-item\"} key={index} href={item.link}>\r\n                   {item.title}\r\n                </a>\r\n            ))\r\n        )\r\n    }\r\n}","import {observable} from \"mobx\";\r\n\r\nexport class HeaderStore {\r\n    @observable isMenuVisible = false;\r\n}","import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport {Menu} from \"../menu\";\r\nimport {observer} from \"mobx-react\";\r\nimport {HeaderStore} from \"./HeaderStore\";\r\nimport {autobind} from \"core-decorators\";\r\n\r\n@observer\r\n@autobind\r\nexport class Header extends React.Component {\r\n    private readonly store = new HeaderStore();\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div>\r\n                <Menu isVisible={this.store.isMenuVisible}/>\r\n                <div className={\"header\"}>\r\n                    <div className={\"header__container\"}>\r\n                        <div className=\"header__menu icon\" onClick={this.onMenuClick}/>\r\n                        <div className=\"header__logo\" onClick={this.onLogoClick}>\r\n                            <div className=\"header__logo-icon\"/>\r\n                            <span className=\"header__logo-text\">ГТО - СЕРВИС</span>\r\n                        </div>\r\n                        <div className=\"header__profile icon\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private onMenuClick(): void {\r\n        this.store.isMenuVisible = !this.store.isMenuVisible;\r\n    }\r\n\r\n    private onLogoClick(): void {\r\n        window.location.replace(\"/\");\r\n    }\r\n}","import {observable} from \"mobx\";\r\nimport {ITableColumn} from \"./ITableColumn\";\r\n\r\nexport class TableStore {\r\n    @observable columns: ITableColumn[] = [];\r\n    @observable data: object[] = []\r\n}","import * as React from \"react\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {observer} from \"mobx-react\";\r\nimport {TableStore} from \"./TableStore\";\r\nimport {get, attempt} from \"lodash\";\r\nimport \"./Table.scss\";\r\nimport {ITableProps} from \"./ITableProps\";\r\nimport {isUndefined, isEqual} from \"lodash\";\r\n\r\n@autobind\r\n@observer\r\nexport class Table extends React.Component<ITableProps> {\r\n    private readonly store = new TableStore();\r\n\r\n    componentDidMount() {\r\n        if (isUndefined(this.props.columns) || isUndefined(this.props.data)) {\r\n            return;\r\n        }\r\n        this.store.columns = this.props.columns;\r\n        this.store.data = this.props.data;\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        if (isUndefined(this.props.columns) || isUndefined(this.props.data)) {\r\n            return;\r\n        }\r\n        if (!isEqual(this.store.columns, this.props.columns)) {\r\n            this.store.columns = this.props.columns;\r\n        }\r\n        if (!isEqual(this.store.data, this.props.data)) {\r\n            this.store.data = this.props.data;\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={\"table\"}>\r\n                <div className={\"table__header\"}>\r\n                    {this.getColumns()}\r\n                </div>\r\n                <div className={\"table-body\"}>\r\n                    {this.getLines()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getColumns(): React.ReactNode {\r\n        return (\r\n            this.store.columns.map((column, index) => {\r\n                return (\r\n                    <div key={index} className={`table-item ${column.className}`}>\r\n                        {column.title}\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    private getLines(): React.ReactNode {\r\n        return (\r\n            this.store.data.map((line, index) => {\r\n                if (isUndefined(get(line, \"header\"))) {\r\n                    if (get(line, \"isVisible\")) {\r\n                        return (\r\n                            <div key={index} className={\"table__line\"}>\r\n                                {\r\n                                    this.store.columns.map((column, index) => {\r\n\r\n                                            return (\r\n                                                <div key={index} className={`table-item ${column.className || \"\"}`}>\r\n                                                    {get(get(line, \"data\"), column.accessor)}\r\n                                                    {Table.getCell(line, column.cell)}\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return void 0\r\n                    }\r\n                }\r\n                return <div className={\"table__sub-header\"}>{get(line, \"header\")}</div>\r\n            })\r\n        )\r\n    }\r\n\r\n    private static getCell(data: object, cell?: (data: object) => React.ReactNode): React.ReactNode {\r\n        if (!cell) {\r\n            return void 0;\r\n        }\r\n        return cell(data);\r\n    }\r\n}\r\n","import {observable} from \"mobx\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {ITableColumn, ITableData} from \"../../components/table\";\r\nimport * as React from \"react\";\r\n\r\n@autobind\r\nexport class UserResultStore {\r\n    @observable data: ITableData[] = [];\r\n    @observable cell?: (data:object) => React.ReactNode;\r\n\r\n    columns: ITableColumn[] = [\r\n        {accessor: \"date_of_competition\", title: \"Дата\"},\r\n        {accessor: \"name_of_trial\", title: \"Соревнование\"},\r\n        {accessor: \"primary_result\", title: \"Первичный результат\"},\r\n        {accessor: \"secondary_result\", title: \"Приведенный результат\"},\r\n        {accessor: \"unique_number\", title: \"уникальный Номер\"},\r\n        {accessor: \"gold\", title: \"золото\"},\r\n        {accessor: \"serebro\", title: \"серебро\"},\r\n        {accessor: \"bronza\", title: \"бронза\"},\r\n    ];\r\n    @observable error: string = \"\";\r\n}","import {Table} from \"../../components/table\";\r\nimport * as React from \"react\";\r\nimport {Transport} from \"../../services/Transport\";\r\nimport {AxiosError, AxiosResponse} from \"axios\";\r\nimport {IGetUserInfoResponse, ICompetitionResult} from \"../../services/Transport/responses\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {observer} from \"mobx-react\";\r\nimport {UserResultStore} from \"./UserResultStore\";\r\nimport {get} from \"lodash\";\r\nimport \"./UserResult.scss\";\r\n\r\n@autobind\r\n@observer\r\nexport class UserResult extends React.Component {\r\n    private readonly transport: Transport;\r\n    private readonly store = new UserResultStore();\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.transport = new Transport();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const id = window.location.pathname.split(\"/\")[2];\r\n        this.transport.getUserInfo(id).then(this.onSuccess).catch(this.onError)\r\n    }\r\n\r\n    private onSuccess(response: AxiosResponse<IGetUserInfoResponse>): void {\r\n        const data = get(response, \"data\");\r\n        const result = get(data, \"message\");\r\n        this.store.data = result.map((item: ICompetitionResult) => {\r\n            const date = item.date_of_competition.split(\"T\")[0];\r\n            return {\r\n                data: {\r\n                    ...item,\r\n                    date_of_competition: date\r\n                },\r\n                isVisible: true,\r\n            }\r\n        })\r\n    }\r\n\r\n    private onError(error: AxiosError): void {\r\n        if (!error.response) {\r\n            return;\r\n        }\r\n        this.store.error = error.response.data.title;\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={\"user-result\"}>\r\n                {\r\n                    this.store.error !== \"\"\r\n                        ? (\r\n                            <div className={\"error\"}>\r\n                                {this.store.error}\r\n                            </div>\r\n                        )\r\n                        : <Table columns={this.store.columns} data={this.store.data}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import {autobind} from \"core-decorators\";\r\nimport {observable} from \"mobx\";\r\n\r\n@autobind\r\nexport class InputFieldStore {\r\n    @observable value = \"\";\r\n}","import * as React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport {InputFieldStore} from \"./InputFieldStore\";\r\nimport {attempt, isUndefined, isEmpty} from \"lodash\";\r\nimport {IInputFieldProps} from \"./IInputFieldProps\";\r\nimport {autobind} from \"core-decorators\";\r\nimport \"./InputField.scss\";\r\nimport {ERegExp} from \"./ERegExp\";\r\nimport classNames from \"classnames\";\r\n\r\n@observer\r\n@autobind\r\nexport class InputField extends React.Component<IInputFieldProps> {\r\n    private readonly store = new InputFieldStore();\r\n\r\n    componentDidMount(): void {\r\n        if (isUndefined(this.props.defaultValue)) {\r\n            return;\r\n        }\r\n        this.store.value = this.props.defaultValue;\r\n        attempt(this.props.setValue!, this.store.value);\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <input\r\n                className={classNames({\"input__field\": true, \"read-only\": this.props.isReadOnly})}\r\n                onChange={this.onChange}\r\n                value={this.store.value}\r\n                type={this.props.type}\r\n                maxLength={this.props.maxLength}\r\n                onBlur={this.props.onBlur}\r\n                name={this.props.name}\r\n                accessKey={this.props.accessKey}\r\n                placeholder={this.props.placeholder}\r\n                readOnly={this.props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    private onChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        if (!isUndefined(this.props.mask) && !isEmpty(value)) {\r\n            const mask = new RegExp(this.props.mask);\r\n            if (mask.test(value) && this.checkDouble(value)) {\r\n                this.store.value = value;\r\n                attempt(this.props.setValue!, this.store.value);\r\n            }\r\n            return;\r\n        }\r\n        this.store.value = event.target.value;\r\n        attempt(this.props.setValue!, this.store.value)\r\n    }\r\n\r\n    private checkDouble(value: string): boolean {\r\n        if (this.props.mask !== ERegExp.ONLY_DOUBLE) {\r\n            return true;\r\n        }\r\n        if (value.indexOf(\".\") !== -1 && value.replace(\".\", \"\") === this.store.value) {\r\n            return value.split(\".\").length <= 2;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.store.value;\r\n    }\r\n}","export enum EGender {\r\n    MALE = \"мужской\",\r\n    FEMALE = \"женский\"\r\n}","import {observable} from \"mobx\";\r\nimport {autobind} from \"core-decorators\";\r\n\r\n@autobind\r\nexport class LoginStore {\r\n    @observable email = \"\";\r\n    @observable password = \"\";\r\n\r\n    setEmail(value: string) {\r\n        this.email = value;\r\n    }\r\n\r\n    setPassword(value: string) {\r\n        this.password = value;\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Login.scss\";\r\nimport {InputField} from \"../../components/input-field\";\r\nimport {LoginStore} from \"./img/LoginStore\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {Transport} from \"../../services/Transport\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {ILoginResponse} from \"../../services/Transport/responses\";\r\nimport {UserStore} from \"../../components/user-store\";\r\n\r\n@autobind\r\nexport class Login extends React.Component {\r\n    private readonly store = new LoginStore();\r\n    private readonly transport = new Transport();\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={\"login\"}>\r\n                <div className={\"form\"}>\r\n                    <div className={\"form__content\"}>\r\n                        <h1 className={\"header\"}>Вход</h1>\r\n                        <p className={\"sub-header\"}>Заполните поля для входа</p>\r\n                        <div>\r\n                            <p className={\"field-name\"}>Email</p>\r\n                            <InputField setValue={this.store.setEmail}/>\r\n                        </div>\r\n                        <div>\r\n                            <p className={\"field-name\"}>Пароль</p>\r\n                            <InputField type={\"password\"} setValue={this.store.setPassword}/>\r\n                        </div>\r\n                        <div className={\"button\"} onClick={this.onSubmit}>Войти</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private onSubmit(): void {\r\n        const params = {\r\n            login: this.store.email,\r\n            password: this.store.password\r\n        };\r\n        this.transport.login(params).then(this.onSuccess).catch(console.log);\r\n    }\r\n\r\n    onSuccess(response: AxiosResponse<ILoginResponse>): void {\r\n        console.log(\"Login.onSuccess\", response);\r\n        UserStore.getInstance().token = response.data.token;\r\n        window.location.replace(\"/profile\");\r\n    }\r\n}","import {IRole} from \"../../components/user-store\";\r\nimport {observable} from \"mobx\";\r\n\r\nexport class ProfileStore {\r\n    @observable roles: IRole[] = [];\r\n    @observable selectedRoleId = -1;\r\n    @observable email = \"\";\r\n}","import * as React from \"react\";\r\nimport {UserStore} from \"../../components/user-store\";\r\nimport Select from \"react-select\";\r\nimport \"./Profile.scss\";\r\nimport {InputField} from \"../../components/input-field\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {IRole} from \"../../components/user-store\";\r\nimport {Transport} from \"../../services/Transport\";\r\nimport {ProfileStore} from \"./ProfileStore\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {observer} from \"mobx-react\";\r\n\r\n@autobind\r\n@observer\r\nexport class Profile extends React.Component {\r\n    private readonly transport = new Transport();\r\n    private readonly store = new ProfileStore();\r\n\r\n    componentDidMount(): void {\r\n        this.getAllRoles().then(this.onSuccess);\r\n    }\r\n\r\n    onSuccess(r: AxiosResponse<IRole[]>): void {\r\n        this.store.roles = r.data;\r\n    }\r\n\r\n    getAllRoles(): Promise<AxiosResponse<IRole[]>> {\r\n        return this.transport.getRoles();\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={\"profile\"}>\r\n                <div>profile</div>\r\n                <InputField setValue={this.setValue}/>\r\n                <Select\r\n                    isSearchable={true}\r\n                    options={\r\n                        this.store.roles.map(item => {\r\n                            return {\r\n                                value: item.role_id, label: item.name_of_role\r\n                            }\r\n                        })\r\n                    }\r\n                    className=\"react-select-container\"\r\n                    classNamePrefix=\"react-select\"\r\n                    placeholder={\"Выберете роль\"}\r\n                    onChange={this.onChange}\r\n                />\r\n                <button onClick={this.onSubmit}>send</button>\r\n            </div>\r\n        )\r\n    }\r\n    onSubmit(): void {\r\n        this.transport.inviteUser({role_id: this.store.selectedRoleId, email: this.store.email}).then(console.log)\r\n    }\r\n    onChange(selectedOption: any): void {\r\n        this.store.selectedRoleId = selectedOption.value;\r\n    }\r\n\r\n    setValue(value: string): void {\r\n        this.store.email = value;\r\n    }\r\n}","import {observable} from \"mobx\";\r\nimport {IRadioItem} from \"./IRadioItem\";\r\n\r\nexport class RadioStore {\r\n    @observable items: IRadioItem[] = [];\r\n}","import React from \"react\";\r\nimport {IRadioProps} from \"./IRadioProps\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {RadioStore} from \"./RadioStore\";\r\nimport {isEmpty, isEqual} from \"lodash\";\r\nimport \"./Radio.scss\";\r\nimport classNames from \"classnames\";\r\nimport {observer} from \"mobx-react\";\r\n\r\n@autobind\r\n@observer\r\nexport class Radio extends React.Component<IRadioProps> {\r\n    private readonly store = new RadioStore();\r\n\r\n    componentDidMount(): void {\r\n        this.store.items = this.props.values.map(value => {\r\n            return {title: value, isChecked: false}\r\n        });\r\n        if (isEmpty(this.store.items)) {\r\n            return;\r\n        }\r\n        this.store.items[0].isChecked = true;\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={\"radio-form\"}>\r\n                {\r\n                    this.store.items.map((item, index) => (\r\n                            <div key={index} className={\"radio-form__item\"} onClick={() => this.onClickItem(index)}>\r\n                                <div className={classNames({\r\n                                    \"radio-form__button\": true,\r\n                                    \"checked\": item.isChecked,\r\n                                })}/>\r\n                                <span>{item.title}</span>\r\n                            </div>\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onClickItem(selectedIndex: number): void {\r\n        this.store.items.map((item, index) =>\r\n            item.isChecked = selectedIndex === index\r\n        );\r\n        if (!this.props.onChange) {\r\n            return;\r\n        }\r\n        this.props.onChange(this.store.items[selectedIndex].title);\r\n    }\r\n}","import * as React from \"react\";\r\nimport {Transport} from \"../../services/Transport\";\r\nimport {CalculatorStore} from \"./CalculatorStore\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {isNil} from \"lodash\";\r\nimport {IGetCalculationResultParams} from \"../../services/Transport/params\";\r\nimport {EGender} from \"./EGender\";\r\nimport {ICompetitionResult} from \"../../services/Transport/responses\";\r\n\r\n@autobind\r\nexport class CalculatorController {\r\n    private readonly transport = new Transport();\r\n    private readonly store: CalculatorStore;\r\n\r\n    constructor(store: CalculatorStore) {\r\n        this.store = store;\r\n    }\r\n\r\n    onBlur(): void {\r\n        const res = +this.store.old;\r\n        if (isNil(res) || this.store.old === \"\") {\r\n            return;\r\n        }\r\n        this.store.data.splice(0, this.store.data.length);\r\n        const genderId = this.store.gender === EGender.MALE ? 1 : 2;\r\n        this.transport.getTrials({gender_id: genderId, old: res})\r\n            .then(this.store.onSuccessGetTrials)\r\n            .catch(this.store.onError)\r\n    }\r\n\r\n    setOld(value: string): void {\r\n        this.store.old = value;\r\n    }\r\n\r\n    onRadioChange(value: string): void {\r\n        this.store.gender = value as EGender;\r\n        this.onBlur();\r\n    }\r\n\r\n    onComponentDidMount(): void {\r\n        this.transport.getCategories().then(this.store.onSuccessGetCategories).catch(this.store.onError);\r\n    }\r\n\r\n    onClickVisible(id: string): void {\r\n        this.store.data = this.store.data.map(item => {\r\n            const data = item.data as ICompetitionResult;\r\n            return {\r\n                data,\r\n                isVisible: data.trial_id === id ? false : item.isVisible\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    onBlurInput(event: React.FocusEvent<HTMLInputElement>): void {\r\n        const trialId = +event.target.accessKey;\r\n        const primaryResult = +(event.target.value.replace(\",\", \".\"));\r\n        if (isNaN(primaryResult) || event.target.value === \"\" || isNaN(trialId)) {\r\n            return;\r\n        }\r\n        this.getCalculationResult(trialId, primaryResult);\r\n    }\r\n\r\n    private getCalculationResult(trial_id: number, primary_result: number): void {\r\n        const params: IGetCalculationResultParams = {\r\n            age_category_id: this.store.ageCategoryId,\r\n            primary_result,\r\n            trial_id,\r\n            gender_id: this.store.gender === EGender.MALE ? 1 : 2,\r\n        };\r\n        this.transport\r\n            .getCalculationResult(params)\r\n            .then(this.store.onSuccessCalculate)\r\n            .catch(this.store.onError);\r\n    }\r\n}","import * as React from \"react\";\r\nimport {observable} from \"mobx\";\r\nimport {ITableData, ITableColumn} from \"../../components/table\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {IGetTrialsResponse, ITrial} from \"../../services/Transport/responses\";\r\nimport {AxiosError, AxiosResponse} from \"axios\";\r\nimport {get} from \"lodash\";\r\nimport {EGender} from \"./EGender\";\r\nimport {IGetCategoriesResponse} from \"../../services/Transport/responses/IGetCategoriesResponse\";\r\n\r\n@autobind\r\nexport class CalculatorStore {\r\n    @observable data: ITableData[] = [];\r\n    @observable cell?: (data: object) => React.ReactNode;\r\n    @observable nameCell?: (data: object) => React.ReactNode;\r\n    @observable columns: ITableColumn[] = [];\r\n    @observable gender = EGender.MALE;\r\n    @observable old = \"\";\r\n    @observable ageCategoryId = -1;\r\n    @observable categories: IGetCategoriesResponse[] = [];\r\n\r\n    onSuccessGetTrials(response: AxiosResponse<IGetTrialsResponse>): void {\r\n        console.log(\"CalculatorStore.onSuccessGetTrials\", response);\r\n        const data = get(response, \"data\");\r\n        this.ageCategoryId = data.age_category_id;\r\n        const trials = get (data, \"trials\");\r\n        trials.forEach(item => {\r\n            const res = get(item, \"trial_group\");\r\n            res.forEach((trial: ITrial) => {\r\n                this.data.push({data: trial, isVisible: true})\r\n            })\r\n        });\r\n        this.data.push({data: {\r\n                is_main_trial: true,\r\n        name_of_trial: \"Плавание\",\r\n        result_for_bronze: 15,\r\n        result_for_gold: 9,\r\n        result_for_silver: 13,\r\n        trial_id: 12,\r\n            }, isVisible: true})\r\n    }\r\n\r\n    onSuccessCalculate(r: AxiosResponse<IGetTrialsResponse>): void {\r\n        console.log(r)\r\n    }\r\n\r\n    onSuccessGetCategories(response: AxiosResponse<IGetCategoriesResponse[]>): void {\r\n        this.categories = response.data;\r\n    }\r\n\r\n    onError(err: AxiosError): void {\r\n        console.error(err);\r\n        this.data.push({data: {\r\n                is_main_trial: true,\r\n                name_of_trial: \"Плавание\",\r\n                result_for_bronze: 15,\r\n                result_for_gold: 9,\r\n                result_for_silver: 13,\r\n                trial_id: 12,\r\n            }, isVisible: true})\r\n    }\r\n}","import * as React from \"react\";\r\nimport {InputField} from \"../../components/input-field\";\r\nimport {Radio} from \"../../components/radio-button\";\r\nimport \"./Calculator.scss\";\r\nimport {ERegExp} from \"../../components/input-field/ERegExp\";\r\nimport {CalculatorController} from \"./CalculatorController\";\r\nimport {Table} from \"../../components/table\";\r\nimport {CalculatorStore} from \"./CalculatorStore\";\r\nimport {autobind} from \"core-decorators\";\r\nimport {observer} from \"mobx-react\";\r\nimport {get} from \"lodash\";\r\nimport {ICompetitionResult} from \"../../services/Transport/responses\";\r\nimport {EGender} from \"./EGender\";\r\nimport {SimpleSelect} from \"react-selectize\";\r\nimport \"react-selectize/themes/index.css\";\r\n\r\n@autobind\r\n@observer\r\nexport class Calculator extends React.Component {\r\n    private readonly store = new CalculatorStore();\r\n    private readonly controller = new CalculatorController(this.store);\r\n\r\n    componentDidMount(): void {\r\n        this.controller.onComponentDidMount();\r\n        this.store.cell = this.setCell;\r\n        this.store.nameCell = this.setNameCell;\r\n        this.setColumns();\r\n    }\r\n\r\n    setColumns(): void {\r\n        this.store.columns = [\r\n            {accessor: \"name_of_trial\", title: \"Соревнование\", className: \"name\", cell: this.store.nameCell},\r\n            {accessor: \"primary_result\", title: \"Первичный результат\", cell: this.store.cell},\r\n            {accessor: \"secondary_result\", title: \"Приведенный результат\"},\r\n            {accessor: \"result_for_gold\", title: \"золото\"},\r\n            {accessor: \"result_for_silver\", title: \"серебро\"},\r\n            {accessor: \"result_for_bronze\", title: \"бронза\"},\r\n        ]\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const options = this.getOptions();\r\n        return (\r\n            <div className={\"calculator\"}>\r\n                <div className={\"calculator__user-data\"}>\r\n                    <div className={\"gender\"}>\r\n                        <span>Пол: </span>\r\n                        <Radio values={[EGender.MALE, EGender.FEMALE]} onChange={this.controller.onRadioChange}/>\r\n                    </div>\r\n                    <label>Возраст:\r\n                        <InputField\r\n                            mask={ERegExp.ONLY_NUMBERS}\r\n                            maxLength={3}\r\n                            onBlur={this.controller.onBlur}\r\n                            setValue={this.controller.setOld}\r\n                        />\r\n                        (полных лет)\r\n                    </label>\r\n                </div>\r\n                <SimpleSelect options = {options} placeholder = \"Выберете возрастную ступень\"/>\r\n                <Table columns={this.store.columns} data={this.store.data}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getOptions(): {value: string, label: string}[] {\r\n        const res: {value: string, label: string}[] = [];\r\n        this.store.categories.forEach(item => {\r\n            const genderId = this.store.gender === EGender.MALE ? 1 : 2;\r\n            if (item.gender_id === genderId) {\r\n\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n\r\n    private setNameCell(data: object): React.ReactNode {\r\n        const result = get(data, \"data\") as ICompetitionResult;\r\n        return (\r\n            <div\r\n                className={\"visible-control\"}\r\n                onClick={() => this.controller.onClickVisible(result.trial_id)}\r\n            >\r\n                Скрыть\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private setCell(data: object): React.ReactNode {\r\n        const result = get(data, \"data\") as ICompetitionResult;\r\n        return (\r\n            <InputField\r\n                onBlur={this.controller.onBlurInput}\r\n                placeholder={\"Введите\"}\r\n                accessKey={result.trial_id}\r\n                mask={ERegExp.ONLY_DOUBLE}\r\n                maxLength={10}\r\n            />\r\n        )\r\n    }\r\n}","import {observable} from \"mobx\";\r\n\r\nexport class RegistrationStore {\r\n    @observable email: string = \"\";\r\n}","import React from \"react\";\r\nimport {UserStore} from \"../../components/user-store\";\r\nimport {InputField} from \"../../components/input-field\";\r\nimport {Transport} from \"../../services/Transport\";\r\nimport {IGetEmailResponse} from \"../../services/Transport/responses\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {observer} from \"mobx-react\";\r\nimport {RegistrationStore} from \"./RegistrationStore\";\r\n\r\n@observer\r\nexport class Registration extends React.Component {\r\n    private readonly transport = new Transport();\r\n    private readonly store = new RegistrationStore();\r\n\r\n    componentDidMount(): void {\r\n        const parsedUrl = window.location.search.split(\"=\");\r\n        if (parsedUrl.length < 2) {\r\n            return;\r\n        }\r\n        UserStore.getInstance().token = parsedUrl[1];\r\n        history.replaceState(\"\", \"\", \"/user/invite\");\r\n        this.transport.getEmail().then(this.onSuccessGetEmail);\r\n    }\r\n\r\n    private onSuccessGetEmail(response: AxiosResponse<IGetEmailResponse>): void {\r\n        this.store.email = response.data.email;\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={\"login\"}>\r\n                <div className={\"form\"}>\r\n                    <div className={\"form__content\"}>\r\n                        <h1 className={\"header\"}>Регистрация</h1>\r\n                        <p className={\"sub-header\"}>Заполните поля для регистрации</p>\r\n                        <div>\r\n                            <p className={\"field-name\"}>Email</p>\r\n                            <InputField isReadOnly={true} defaultValue={this.store.email}/>\r\n                        </div>\r\n                        <div>\r\n                            <p className={\"field-name\"}>Пароль</p>\r\n                            <InputField type={\"password\"} />\r\n                        </div>\r\n                        <div>\r\n                            <p className={\"field-name\"}>Повторите пароль</p>\r\n                            <InputField type={\"password\"} />\r\n                        </div>\r\n                        <div className={\"button\"} >Зарегестрироваться</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Test.scss\";\r\n\r\n\r\nexport class Test extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"test\"} onClick={this.onClick}>\r\n                <div>hello</div>\r\n                <div>11</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private onClick() {\r\n        console.log(\"232\");\r\n    }\r\n\r\n}","import * as React from 'react';\nimport {Route, Switch} from \"react-router\";\nimport {BrowserRouter} from 'react-router-dom';\nimport {Home} from \"./screens/home\";\nimport {NotFound} from \"./screens/not-found\";\nimport {Header} from \"./components/header\";\nimport \"./App.scss\";\nimport {Footer} from \"./components/footer\";\nimport {UserResult} from \"./screens/user-result\";\nimport {Login} from \"./screens/login/Login\";\nimport {Profile} from \"./screens/profile\";\nimport {Calculator} from \"./screens/calculator\";\nimport {Registration} from \"./screens/registration\";\nimport {Test} from \"./screens/test/Test\";\n\nclass App extends React.Component {\n    render(): React.ReactNode {\n        return (\n            <>\n                <Header/>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/profile\" component={Profile}/>\n                        <Route path=\"/user-result\" component={UserResult}/>\n                        <Route path=\"/calculator\" component={Calculator}/>\n                        <Route path=\"/user/invite\" component={Registration}/>\n                        <Route path=\"/test\" component={Test}/>\n                        <Route component={NotFound}/>\n                    </Switch>\n                </BrowserRouter>\n                {/*<Footer/>*/}\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}